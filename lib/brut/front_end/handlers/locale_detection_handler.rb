# Receives the Ajax request containing the browser's JavaScript engine's understanding of the user's locale.
# This is configured in {Brut::Framework::MCP}, however the requests are initiated from the HTML custom element generated by
# {Brut::FrontEnd::Components::LocaleDetection}.  This will set the timezone on the session via
# {Brut::FrontEnd::Session#timezone_from_browser=}, and set the 
# {Brut::FrontEnd::Session#http_accept_language=} *only* if the `Accept-Language` header did not provide a value that is supported by
# the app.
class Brut::FrontEnd::Handlers::LocaleDetectionHandler < Brut::FrontEnd::Handler
  def handle(body:,session:)
    begin
      parsed = JSON.parse(body.read)

      Brut.container.instrumentation.add_attributes(
        prefix: "brut.locale-detection",
        parsed_body: parsed,
        parsed_class: parsed.class
      )

      if parsed.kind_of?(Hash)
        locale   = parsed["locale"]
        timezone = parsed["timeZone"]

        session.timezone_from_browser = timezone
        if !session.http_accept_language.known?
          session.http_accept_language = Brut::I18n::HTTPAcceptLanguage.from_browser(locale)
        end
      end
    rescue => ex
      Brut.container.instrumentation.record_exception(ex)
    end
    http_status(200)
  end
end
