FROM ruby:3.4

SHELL [ "/bin/bash", "-o", "pipefail", "-c" ]

ENV DEBIAN_FRONTEND=noninteractive

# These packages are needed to set up other repos to install other
# packages and/or are useful in installing other software
RUN apt-get -y clean && \
    apt-get -y update && \
    apt-get install --quiet --yes ca-certificates curl gnupg rsync

RUN echo "gem: --no-document" >> ~/.gemrc && \
    gem update --system && \
    gem install bundler
# Need vim at all times
ENV EDITOR=vim
RUN apt-get install -y vim && \
    echo "set -o vi" >> /root/.bashrc


# Setup a non-root user

# Their user id, which ideally matches their user id on the host
ARG user_uid=10001
# Their group id, which ideally matches their group id on the host
ARG user_gid=10002

# Create the user's group ID if it does not exist
RUN getent group ${user_gid} || groupadd --gid ${user_gid} appgroup
# Create the user. Note that we put bash_customizations in both .profile and .bashrc
# to increase the chances they are used when running bash in various configurations
RUN useradd --uid ${user_uid} --gid ${user_gid} --create-home --home-dir /home/appuser appuser && \
    echo ". ~/.bash_customizations" >> /home/appuser/.profile && \
    echo ". ~/.bash_customizations.local" >> /home/appuser/.profile && \
    echo ". ~/.bash_customizations" >> /home/appuser/.bashrc && \
    echo ". ~/.bash_customizations.local" >> /home/appuser/.bashrc

COPY --chown=appuser:${user_gid} dx/show-help-in-app-container-then-wait.sh /home/appuser
COPY --chown=appuser:${user_gid} dx/bash_customizations /home/appuser/.bash_customizations
COPY --chown=appuser:${user_gid} dx/bash_customizations.local /home/appuser/.bash_customizations.local

# NOT including the group here as that will place the user's environment
# ONLY in that group and not in all the groups in which they are a part.
USER appuser

# Install NodeJS, per https://nodejs.org/en/download
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash && \
    \. "$HOME/.nvm/nvm.sh" && \
    nvm install 22 && \
    node -v && nvm current && npm -v

# Node's colors are hand-crafted to always look bad and render at least some text unreadable 
# no matter what your setup. Cool.
ENV NODE_DISABLE_COLORS=1

# This entrypoint produces a nice help message and waits around for you to do
# something with the container.
COPY dx/show-help-in-app-container-then-wait.sh /root
