#!/usr/bin/env ruby

require "optparse"
require "pathname"
require "fileutils"
require_relative "bin_kit"

options = {
  dotcom: true,
}

OptionParser.new do |opts|
  opts.banner = "Usage: docs [options]\n\n    Generates all documentation for the project\n\nOPTIONS\n\n"

  opts.on("-h", "--help", "Display this help message") do
    puts opts
    puts
    exit
  end
  opts.on("--[no-]dotcom", "Deploy (or not), brutrb.com to the docs/ directory (default #{options[:dotcom]})") do |value|
    options[:dotcom] = value
  end
end.parse!

dotcom_dir  = (Pathname(__FILE__).dirname / ".." / "brutrb.com" ).expand_path
public_dir  = (dotcom_dir / "public" ).expand_path
docs_dir    =  public_dir / "api"
brutjs_dir  = (Pathname(__FILE__).dirname / ".." / "brut-js" ).expand_path.to_s
brutcss_dir = (Pathname(__FILE__).dirname / ".." / "brut-css" ).expand_path.to_s
mkbrut_dir  = (Pathname(__FILE__).dirname / ".." / "mkbrut" ).expand_path.to_s

system!(
  "bundle exec yard doc -o '#{docs_dir}' --no-progress -m markdown -M rdiscount --backtrace",
)

log "Hacking CSS"

[
  docs_dir /  "css" / "style.css",
  docs_dir /  "css" / "full_list.css"
].each do |css_file_to_hack|
  lines = File.read(css_file_to_hack).split(/\n/)
  File.open(css_file_to_hack, "w") do |f|
    lines.each do |line|
      if line =~ /\"Lucida Sans"/
        f.puts line.gsub(/\"Lucida Sans\"/, '"Helvetica Neue", "Lucida Sans"')
      elsif line =~ / Monaco,/
        f.puts line.gsub(/ Monaco,/, '"Courier New", Monaco,')
      elsif line =~ /font-family: monospace;/
        f.puts line.gsub(/font-family: monospace;/, 'font-family: "Courier New", monospace;')
      else
        f.puts line
      end
    end
    f.puts "code { font-family: 'Courier New', monospace; font-weight: 600; }"
  end
end

log "Generating brut-js docs"
FileUtils.chdir brutjs_dir do
  system!("bin/docs")
end
log "Generating brut-css docs"
FileUtils.chdir brutcss_dir do
  system!("bin/docs")
end
log "Generating mkbrut docs"
FileUtils.chdir mkbrut_dir do
  system!("bin/docs")
end

if options[:dotcom]
  log "Deploying brutrb.com to docs/"
  FileUtils.chdir dotcom_dir do
    system!("bin/deploy")
  end
else
  log "Skipping brutrb.com deployment"
end
